<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<?xml version="1.0" encoding="utf-8"?><HTML lang=en
xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><HEAD><TITLE>Silk Server - User Manual</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
    <link rel="stylesheet" type="text/css" href="style.css" />
    
</HEAD>
<BODY>
<DIV class=head>
<H1 id=title>Silk Server - User Manual</H1>
<DL>
  <DT>This Version:
  <DD>
    <p><a href="http://www4.wiwiss.fu-berlin.de/bizer/silk/server/20101006/">http://www4.wiwiss.fu-berlin.de/bizer/silk/server/20101006/</a> </p>
    <DT>Latest Version:
  <DD><a href="http://www4.wiwiss.fu-berlin.de/bizer/silk/server/">http://www4.wiwiss.fu-berlin.de/bizer/silk/server/</a><DT>
  <DT>Authors:
  <DD><A href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/team/IseleRobert.html">Robert Isele</A> (Freie Universit&auml;t Berlin, Germany)
  <DD>
  <DD><A href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/team/JentzschAnja.html">Anja Jentzsch</A> (Freie Universit&auml;t Berlin, Germany)
  <DD>
  <DD><A href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/team/BizerChristian.html">Chris Bizer</A> (Freie Universit&auml;t Berlin, Germany)
  <DT></DT></DL>
<P>&nbsp;</P>
<HR title="Separator for header">
</DIV>

<H2 id=toc>Table of Contents</H2>
<UL class=toc>
  <LI>1. <A href="#introduction">Introduction</A>
  <LI>2. <A href="#configuration">Configuration</A>
    <ul>
    <li>2.1 <a href="#configParams">Server configuration parameters</a></li>
    <li>2.2 <a href="#linkSpec">Writing Link Specifications for the Server</a></li>
    </ul>
  </LI>
  <li>3. <A href="#usage">Usage</A>
    <ul>
      <li>3.1 <A href="#running">Running the Server</A></li>
      <li>3.2 <A href="#requesting">Making requests the Server</A></li>
    </ul>
  </li>  
  <li>4. <A href="#usageexample">Usage example</A></li>  
  <li>5. <A href="#references">References</A></li>
  <li>6. <A href="#change_log">Change Log</A></li>
</UL>
<HR>

<H1><A name=introduction>1. Introduction</A></H1>
<p>Silk Server is an extension to the Silk Link Discovery Framework. Silk Server is designed to be used with an incoming stream of RDF instances, produced for example by a Linked Data crawler such as <a href="http://code.google.com/p/ldspider/">LDspider</a>. Silk Server matches data describing incoming instances against a local set of known instances and discovers missing links between them based on user-provided link specifications. Incoming instances which do not match a known instance are added to the local set of instances continuously. Using the <a href="http://www4.wiwiss.fu-berlin.de/bizer/silk/spec/">Silk Link Specification Language (Silk-LSL)</a> conditions data items must fulfill in order to be interlinked can be specified by combining various similarity metrics and taking the graph around a data item into account. Based on this assessment, an application can store data about newly discovered instances in its repository or fuse data that is already known about an entity with additional data about the entity from the Web. Silk Server can be used within Linked Data application architectures as an identity resolution component to add missing RDF links to data that is consumed from the Web of Linked Data.</p>

<p>The main features of the Silk Server are:</p>
<ul>
  <li>It runs as an HTTP server and offers a REST interface that allows applications to check whether data that is discovered on the Web describes an entity that is already known to the system. If the entity is already known, Silk Server returns an RDF link pointing at the URI identifying the known entity.</li>
  <li>It provides a flexible, declarative language for specifying the conditions that are checked in order to determine whether an entity is already known to the system.</li>
  <li>It is high-performing by holding the data about all known instances that is required for the comparisons in an in-memory cache, which is also updated as soon as new instances are discovered. In addition, the performance can be further enhanced using a blocking feature.</li>
  <li>It is available under an open source license and can be run on all major platforms.</li>
</ul>

<HR title="Separator for header">

<H1 id=configuration>2. Configuration</H1>
<h2><a name="configParams" />2.1 Server configuration parameters</h2>
<p>
  <table borderColor=#cccccc cellSpacing=0 cellPadding=5 width="100%" border=1> 
    <tbody> 
      <tr> 
        <th>Parameter</th> 
        <th>Description</th> 
      </tr> 
      <tr> 
        <td>configDir</td> 
        <td>The directory where the Silk Link Specifications can be found. On startup, the Silk Server will load all Link Specifications in this directory. For details on writing a Link Specification for the Silk Server see the <a href="#linkSpec">next Section</a>.</td> 
      </tr> 
      <tr> 
        <td>writeUnknownInstances</td> 
        <td>Specifies whether unknown instances should be added to the instance cache.</td> 
      </tr> 
      <tr> 
        <td>returnUnknownInstances</td> 
        <td>Specifies whether the server response should contain unknown instances, too.</td> 
      </tr> 
    </tbody>
  </table>
</p> 
<h2><a name="linkSpec" />2.2 Writing Link Specifications for the Server</h2>
For general information on how to write a Linking Specification refer to <a href="http://www4.wiwiss.fu-berlin.de/bizer/silk/spec/">Silk Link Specification Language Description</a>. There are a few points which should be considered when writing a Link Specification for the Server:
<h3>DataSources</h3>
In a typical use case there is some initial dataset, which shall be loaded by the server on start-up. This can be accomplished by specifying a source dataset in the Link Specification. The target dataset will be formed by the incoming stream and thus is ignored by the server.
<P>Example:</P> 
<pre>
  ...
  
  &lt;DataSources&gt;
    &lt;DataSource id="source" type="file"&gt;
      &lt;Param name="file" value="./initialData.rdf"/&gt;
      &lt;Param name="format" value="RDF/XML"/&gt;
    &lt;/DataSource&gt;
    &lt;DataSource id="inputStream" type="rdf"&gt;
      &lt;Param name="format" value="N-TRIPLE"/&gt;
      &lt;Param name="input" value=""/&gt;
    &lt;/DataSource&gt;
  &lt;/DataSources&gt;
  
  &lt;Interlinks&gt;
    &lt;Interlink id="persons"&gt;
      &lt;LinkType&gt;owl:sameAs&lt;/LinkType&gt;

      &lt;SourceDataset dataSource="source" var="a"&gt;
        &lt;RestrictTo&gt;
        ?a rdf:type foaf:Person .
        &lt;/RestrictTo&gt;
      &lt;/SourceDataset&gt;

      &lt;TargetDataset dataSource="inputStream" var="b"&gt;
        &lt;RestrictTo&gt;
        ?b rdf:type foaf:Person .  
        &lt;/RestrictTo&gt;
      &lt;/TargetDataset&gt;
      
      ...
</pre>
<h3>Output</h3>
<p>As the Silk Server returns the generated links in the response, the output section of the Link Specification may be left empty.</p>

<h1><A name="usage"></a>3. Usage</h1>
<h2><A name="running"></a>3.1 Running the Server</h2>
<p>In order to run the Silk Server, you need:</p>
<UL>
  <LI><STRONG>Silk Link Discovery Framework</STRONG>. Get the most recent version from <a href="http://sourceforge.net/projects/silk2/">http://sourceforge.net/projects/silk2/</a>.</LI>
    <LI><strong>Java Runtime Environment</strong> The Silk Link Discovery Framework runs on top of the JVM. Get the most recent JRE from <a href="http://java.sun.com">http://java.sun.com</a>.</li>
    <li><strong>Maven</strong> is used for project management and build automation. Get it from: <a href="http://maven.apache.org">http://maven.apache.org</a>.</LI>
</UL>

<P>What to do:</P>
<ol>
  <li>
    <p><strong>Write Silk-LSL configuration files to specify which resources should be interlinked.</strong> <a href="#linkSpec">Details</a></p>
  </li>
  <li>
    <p><strong>Modify the Server configuration if needed.</strong> <a href="#configParams">Details</a></p>
  </li>
  <li>
    <p><strong>Install the Silk Framework in the local Maven Repository:</strong></p>
    <p>Navigate to the main Silk folder and execute: <strong><tt>mvn install</tt></strong></p>
  </li>
  <li>
    <p><strong>Run the Silk Server:</strong></p>
    <p>Navigate to the server folder and execute: <strong><tt>mvn jetty:run</tt></strong></p>
  </li>
</ol>
<strong>Note:</strong>In order to configure the underlying Jetty Server (e.g. the port on which requests are accepted), you need to edit the pom.xml of the server module. Refer to the <a href="http://docs.codehaus.org/display/JETTY/Maven+Jetty+Plugin">official homepage</a> for details.

<h2><A name="requesting"></a>3.2 Making requests the Server</h2>
<p>The Server accepts HTTP Post requests on the URL <tt>http://{ip:port}/api/process?format={format}</tt>. The input data must be included in the body of the request. 
By default, the Server expects the input data to be serialized as RDF/XML. Other input formats can be specified using the <tt>format</tt> parameter. Supported input formats are: "RDF/XML", "N-TRIPLE", "TURTLE", "TTL" and "N3"</p>
<p>The Server response contains the generated links as N-Triples. If the <tt>returnUnknownInstances</tt> configuration parameter is set, it will additionally contain a statement of the form <tt>unknownInstance &lt;http://www4.wiwiss.fu-berlin.de/bizer/silk/matchingResult&gt; &lt;http://www4.wiwiss.fu-berlin.de/bizer/silk/UnknownInstance&gt;</tt> for each unknown instance in the request.</p>
<p>If the <tt>writeUnknownInstances</tt> configuration parameter is set, each unknown instances will be added to the instance cache. In that case, it will be included in the link generation in future requests.</p>

<hr/>
<h1><A name="usageexample"></a>4. Usage example</h1>
This section reports on the results of an experiment in which we used Silk Server to generate RDF links between authors and publications from a Semantic Web Dog Food Corpus dump and a stream of FOAF profiles that we crawled from the Web.
Semantic Web Dog Food Corpus publishes information on people and publications from Semantic Web conferences.
FOAF is a widely used vocabulary to describe persons, their connections, projects, publications and interests. 
Twitter is a social networking and microblogging website which provides user information as RDFa.
Given these different sources for information on persons, the experiment aims at linking duplicate person descriptions. 
In the following, we explain the Silk-LSL specification used by Silk Server in the experiment; we then first describe the setup of the experiment and finally report on and discuss the results of the experiment.
<h2>4.1 The Link Specification used</h2>
<p>We have used the following link configuration for linking data items describing the same person:</p>
<pre>
01	&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
02	&lt;Silk&gt;
03	  &lt;Prefixes&gt;
04	    &lt;Prefix id=&quot;rdf&quot; namespace=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;/&gt;
05	    &lt;Prefix id=&quot;rdfs&quot; namespace=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;/&gt;
06	    &lt;Prefix id=&quot;owl&quot; namespace=&quot;http://www.w3.org/2002/07/owl#&quot;/&gt;
07	    &lt;Prefix id=&quot;dcterms&quot; namespace=&quot;http://purl.org/dc/terms/&quot;/&gt;
08	    &lt;Prefix id=&quot;foaf&quot; namespace=&quot;http://xmlns.com/foaf/0.1/&quot;/&gt;
09	    &lt;Prefix id=&quot;vcard&quot; namespace=&quot;http://www.w3.org/2006/vcard/ns#&quot; /&gt;
10	  &lt;/Prefixes&gt;
11	  &lt;DataSources&gt;
12	    &lt;DataSource id=&quot;sw_dog_food&quot; type=&quot;file&quot;&gt;
13	      &lt;Param name=&quot;file&quot; value=&quot;semantic_web_dog_food.rdf&quot;/&gt;
14	      &lt;Param name=&quot;format&quot; value=&quot;RDF/XML&quot;/&gt;
15	    &lt;/DataSource&gt;
16	    &lt;DataSource id=&quot;input_stream&quot; type=&quot;rdf&quot;&gt;
17	      &lt;Param name=&quot;format&quot; value=&quot;N-TRIPLE&quot;/&gt;
18	      &lt;Param name=&quot;input&quot; value=&quot;&quot;/&gt;
19	    &lt;/DataSource&gt;
20	  &lt;/DataSources&gt;
21	  &lt;Interlinks&gt;
22	    &lt;Interlink id=&quot;persons&quot;&gt;
23	      &lt;LinkType&gt;owl:sameAs&lt;/LinkType&gt;
24	      &lt;SourceDataset dataSource=&quot;input_stream&quot; var=&quot;a&quot;&gt;
25	        &lt;RestrictTo&gt;
26	          ?a rdf:type foaf:Person .
27	        &lt;/RestrictTo&gt;
28	      &lt;/SourceDataset&gt;
29	      &lt;TargetDataset dataSource=&quot;sw_dog_food&quot; var=&quot;b&quot;&gt;
30	        &lt;RestrictTo&gt;
31	          ?b rdf:type foaf:Person .
32	        &lt;/RestrictTo&gt;
33	      &lt;/TargetDataset&gt;
34	      &lt;LinkCondition&gt;
35	        &lt;Aggregate type=&quot;average&quot;&gt;
36	          &lt;Aggregate type=&quot;max&quot; required=&quot;true&quot;&gt;
37	            &lt;Compare metric=&quot;jaroWinkler&quot;&gt;
38	              &lt;TransformInput function=&quot;lowerCase&quot;&gt;
39	                &lt;Input path=&quot;?a/foaf:name&quot;/&gt;
40	              &lt;/TransformInput&gt;
41	              &lt;TransformInput function=&quot;lowerCase&quot;&gt;
42	                &lt;Input path=&quot;?b/foaf:name&quot;/&gt;
43	              &lt;/TransformInput&gt;
44	            &lt;/Compare&gt;
45	          &lt;/Aggregate&gt;
46	          &lt;Aggregate type=&quot;max&quot; weight=&quot;2&quot; required=&quot;true&quot;&gt;
47	            &lt;Compare metric=&quot;jaroWinkler&quot;&gt;
48	              &lt;TransformInput function=&quot;lowerCase&quot;&gt;
49	                &lt;Input path=&quot;?a/foaf:homepage&quot;/&gt;
50	              &lt;/TransformInput&gt;
51	              &lt;TransformInput function=&quot;lowerCase&quot;&gt;
52	                &lt;Input path=&quot;?b/foaf:homepage&quot;/&gt;
53	              &lt;/TransformInput&gt;
54	            &lt;/Compare&gt;
55	            &lt;Compare metric=&quot;jaroWinkler&quot;&gt;
56	              &lt;Input path=&quot;?a/foaf:mbox_sha1sum&quot;/&gt;
57	              &lt;Input path=&quot;?b/foaf:mbox_sha1sum&quot;/&gt;
58	            &lt;/Compare&gt;
59	          &lt;/Aggregate&gt;
60	        &lt;/Aggregate&gt;
61	      &lt;/LinkCondition&gt;
62	      &lt;Filter threshold=&quot;0.9&quot;/&gt;
63	    &lt;/Interlink&gt;
64	  &lt;/Interlinks&gt;
65	&lt;/Silk&gt;
</pre>
<p>The complete link configuration for discovering RDF links between persons as well as publications is available <a href="http://www4.wiwiss.fu-berlin.de/bizer/silk/linkspecs/persons_and_publications.xml">online</a>.</p>

<h3>Link Conditions</h3>
<p>The link condition specifies how two data entities are compared for similarity. It consists of a number of comparison operators which are combined using aggregation functions.</p>
<p>A comparison operator evaluates two inputs and computes their similarity based on a user-defined metric.
Silk provides several similarity metrics including string, numeric, date, and URI similarity.
String comparison methods cover the most common ones like Jaro, Jaro-Winkler and Levenshtein.</p>
<p>Multiple comparisons can be aggregated using a specific aggregation method by using the <tt>&lt;Aggregate&gt;</tt> directive.</p> 
<p>In the given experiment's link condition we compute similarity values for the FOAF names, homepages, and mailbox hash sums (lines 34 to 61).
The overall similarity value of two data entities is derived by the weighted average of the similarity values of all comparisons.
To identify a person uniquely, either a homepage or a mailbox hash sum is required.
Thus, two persons are considered equal if both names and either the homepage or the mailbox hash sum match.</p> 
<p>Some comparison operators might be more relevant for the correct establishment of a link between two resources than others and can therefore be weighted higher.
If no weight is supplied, a default weight of 1 will be assumed.
As a person may be known under different names, matching homepages or mailbox hash sums are more important and therefore weighted higher (line 46).</p>

<h3>Filtering</h3>
<p>The generated links can be filtered by using the <tt>&lt;Filter&gt;</tt> directive.
A threshold for the minimum similarity of two data items required to generate a link between them can be defined (line 62).
The number of links originating from a single data item can be limited.
Only the highest-rated links per source data item will remain after the filtering.</p> 

<h2>4.2 Setup of the Experiment</h2>

<p>For the experiment, we loaded the Semantic Web Dog Food Corpus into the Silk Server. 
The Semantic Web Dog Food Corpus contains profiles for 3.739 persons from which 2.580 provide either a homepage or a mailbox hash which is required to uniquely identify them. 
We have set up a Linked Data crawler which takes a number of FOAF profile URIs as seeds and follows linked profiles. 
The crawled documents are forwarded to Silk Server which generates <tt>owl:sameAs</tt> links to known persons from the Semantic Web Dog Food Corpus. 
All generated links have been written to an ouput file.</p>
<p>The crawler was also used to traverse the RDFa of Twitter accounts for which the server identified the corresponding persons in the Semantic Web Dog Food Corpus if any.</p>  
<p>In order to show the flexibility of Silk Server, the link configuration was further enhanced to also match publications. 
For this purpose the crawler was employed to also follow publication links in addition to FOAF profiles.</p> 

<h2>4.3 Results of the Experiment</h2>

<h3>Generated links to FOAF profiles</h3>
<p>At first, we evaluated how exhaustive the found links are. 
For this purpose, we exploited the fact that for 56 persons the Semantic Web Dog Food Corpus already sets links to their FOAF profile. 
For 51 of these persons, Silk Server was able to reconstruct links from the stream. 
For some persons even multiple duplicated profiles could be identified. For example e.g. in addition to Tom Heath's (<tt>http://data.semanticweb.org/person/tom-heath</tt>) official FOAF profile <tt>http://tomheath.com/id/me</tt>, Silk Server also identified him on <tt>http://www.eswc2006.org/people/#tom-heath</tt>.
Because in some cases, Silk Server found a link to another profile than the one given in the data set, we checked all links manually for correctness. 
Thereby, all generated links have been found to be correct.</p>

Next, we evaluated for how many persons in the Semantic Web Dog Food Corpus, the server was able to generate links to a FOAF profile. 
In total, Silk Server was able to find profiles for 228 persons in the data set. 
Thus, Silk Server was able to discover links to the FOAF profile of additional 177 persons for which the Semantic Web Dog Food Corpus did not contain a link yet. 

<h3>Generated links to Twitter accounts</h3>
<p>For 89 persons in the Semantic Web Dog Food Corpus, Silk Server was able to find a corresponding Twitter account. 
Silk Server was able to detect more than one account for persons holding multiple accounts. 
For example, it found that Ralph Hodgson (<tt>http://data.semanticweb.org/person/ralph-hodgson</tt>) not only uses the account <tt>http://twitter.com/ralphtq</tt> but also the account <tt>http://twitter.com/oegovnews</tt>.</p>

<h3>Generated links to publications</h3>
<p>For 37 publications in the Semantic Web Dog Food Corpus Silk Server was able to find the corresponding publication in the Web of Data. 
The number of links is lower than the number of found FOAF profiles because many persons do not link their publications in their profile. 
One exception is the Digital Enterprise Research Institute (DERI), which publishes the meta data about all publications as RDF (<tt>http://www.deri.ie/publications/</tt>).</p> 
<hr/>
<H2><a name="references" />5. References</H2>
<p>
<ul>
    <li>Robert Isele, Anja Jentzsch, Christian Bizer: <a href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/research/publications/IseleJentzschBizer-Silk-Cold2010.pdf"> Silk Server - Adding missing Links while consuming Linked Data</a>. 1st International Workshop on Consuming Linked Data (COLD 2010), Shanghai, November 2010.</li>
    <li>Anja Jentzsch, Robert Isele, Christian Bizer: <a href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/research/publications/JentzschIseleBizer-Silk-Poster-ISWC2010.pdf">Silk - Generating RDF Links while publishing or consuming Linked Data</a>. Poster at the International Semantic Web Conference (ISWC2010), Shanghai, November 2010.</li>
    <li>Julius Volz, Christian Bizer, Martin Gaedke, Georgi Kobilarov: <a href="http://www.wiwiss.fu-berlin.de/en/institute/pwo/bizer/research/publications/VolzBizerGaedkeKobilarov-ISWC2009-Silk.pdf">Discovering and Maintaining Links on the Web of Data</a>. International Semantic Web Conference (ISWC2009), Westfields, USA, October 2009.</li>
    <li> Julius Volz, Christian Bizer, Martin Gaedke, Georgi Kobilarov: <a href="http://events.linkeddata.org/ldow2009/papers/ldow2009_paper13.pdf">Silk – A Link Discovery Framework for the Web of Data </a>. 2nd Workshop about Linked Data on the Web (LDOW2009), Madrid, Spain, April 2009. </li>
    <li>Christian Bizer, Tom Heath, Tim Berners-Lee: <a href="http://tomheath.com/papers/bizer-heath-berners-lee-ijswis-linked-data.pdf">Linked Data - The Story So Far</a>. In: International Journal on Semantic Web & Information Systems, Vol. 5, Issue 3, Pages 1-22, 2009.</li>
</ul>

<HR>

<H1><a name="change_log"/>6. Change Log</H1>
<ul>
  <li>2010-10-06: Added usage example.</li>
  <li>2010-09-15: Initial version of this document.</li>
</ul>
<HR>


</BODY></HTML>